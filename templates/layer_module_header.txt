module MODULE_NAME (
    input logic clk,
    input logic rstn,
    input logic valid,
    input logic [INPUT_ACT_NBITS-1:0] input_act[NUM_INPUT_FMAPS-1:0],
    output logic [OUTPUT_ACT_NBITS-1:0] output_act,
    output logic ready
);

genvar i;
generate
for (i=0;i<NUM_INPUT_FMAPS;i++)
    begin
        always_ff @(posedge clk or negedge rstn) begin
            if (rstn == 0) begin
                input_act_ff[i] <= '0;
            end
            else begin
                input_act_ff[i] <= input_act[i];
            end
        end
    end
endgenerate

